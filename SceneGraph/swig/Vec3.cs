//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace eh {

public class Vec3 : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Vec3(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Vec3 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Vec3() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ehPINVOKE.delete_Vec3(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float x {
    set {
      ehPINVOKE.Vec3_x_set(swigCPtr, value);
    } 
    get {
      float ret = ehPINVOKE.Vec3_x_get(swigCPtr);
      return ret;
    } 
  }

  public float y {
    set {
      ehPINVOKE.Vec3_y_set(swigCPtr, value);
    } 
    get {
      float ret = ehPINVOKE.Vec3_y_get(swigCPtr);
      return ret;
    } 
  }

  public float z {
    set {
      ehPINVOKE.Vec3_z_set(swigCPtr, value);
    } 
    get {
      float ret = ehPINVOKE.Vec3_z_get(swigCPtr);
      return ret;
    } 
  }

  public Vec3() : this(ehPINVOKE.new_Vec3__SWIG_0(), true) {
  }

  public Vec3(float x, float y, float z) : this(ehPINVOKE.new_Vec3__SWIG_1(x, y, z), true) {
  }

  public Vec3(Vec3 b) : this(ehPINVOKE.new_Vec3__SWIG_2(Vec3.getCPtr(b)), true) {
    if (ehPINVOKE.SWIGPendingException.Pending) throw ehPINVOKE.SWIGPendingException.Retrieve();
  }

  public static Vec3 Null() {
    Vec3 ret = new Vec3(ehPINVOKE.Vec3_Null(), false);
    return ret;
  }

  public float getLen() {
    float ret = ehPINVOKE.Vec3_getLen(swigCPtr);
    return ret;
  }

  public float getSqLen() {
    float ret = ehPINVOKE.Vec3_getSqLen(swigCPtr);
    return ret;
  }

  public Vec3 abs() {
    Vec3 ret = new Vec3(ehPINVOKE.Vec3_abs(swigCPtr), true);
    return ret;
  }

  public Vec3 normalized() {
    Vec3 ret = new Vec3(ehPINVOKE.Vec3_normalized(swigCPtr), true);
    return ret;
  }

}

}
